require('dotenv').config();
const { TwitterApi } = require('twitter-api-v2');

/**
 * Test sp√©cifique pour diagnostiquer les permissions Bearer Token
 */

async function testBearerPermissions() {
    console.log('üîç Diagnostic des permissions Bearer Token\n');
    
    const bearerClient = new TwitterApi(process.env.X_BEARER_TOKEN);
    
    // Test 1: Informations de base (devrait marcher)
    console.log('üìã Test 1: Informations utilisateur de base');
    try {
        const me = await bearerClient.v2.me();
        console.log(`‚úÖ Succ√®s: @${me.data.username} (ID: ${me.data.id})`);
    } catch (error) {
        console.log(`‚ùå √âchec: ${error.code} - ${error.message}`);
        console.log(`   D√©tails: ${JSON.stringify(error.data || {}, null, 2)}`);
    }
    
    // Test 2: Informations √©tendues (peut √©chouer selon permissions)
    console.log('\nüîê Test 2: Informations utilisateur √©tendues');
    try {
        const me = await bearerClient.v2.me({
            'user.fields': ['created_at', 'description', 'public_metrics', 'verified']
        });
        console.log(`‚úÖ Succ√®s: Informations √©tendues r√©cup√©r√©es`);
        console.log(`   Followers: ${me.data.public_metrics?.followers_count || 'N/A'}`);
    } catch (error) {
        console.log(`‚ùå √âchec: ${error.code} - ${error.message}`);
        console.log(`   D√©tails: ${JSON.stringify(error.data || {}, null, 2)}`);
    }
    
    // Test 3: Recherche simple (devrait marcher)
    console.log('\nüîç Test 3: Recherche simple');
    try {
        const tweets = await bearerClient.v2.search('hello', { max_results: 10 });
        console.log(`‚úÖ Succ√®s: ${tweets.data?.data?.length || 0} tweets trouv√©s`);
    } catch (error) {
        console.log(`‚ùå √âchec: ${error.code} - ${error.message}`);
        console.log(`   D√©tails: ${JSON.stringify(error.data || {}, null, 2)}`);
    }
    
    // Test 4: V√©rification des rate limits
    console.log('\n‚è±Ô∏è Test 4: Rate limits');
    try {
        const response = await bearerClient.v2.search('test', { max_results: 10 });
        const rateLimit = response.rateLimit;
        if (rateLimit) {
            console.log(`‚úÖ Rate limit info disponible:`);
            console.log(`   Limite: ${rateLimit.limit}`);
            console.log(`   Restant: ${rateLimit.remaining}`);
            console.log(`   Reset: ${new Date(rateLimit.reset * 1000).toLocaleString()}`);
        } else {
            console.log(`‚ö†Ô∏è Pas d'info de rate limit disponible`);
        }
    } catch (error) {
        console.log(`‚ùå √âchec: ${error.code} - ${error.message}`);
    }
    
    console.log('\nüìã DIAGNOSTIC COMPLET');
    console.log('==================================================');
    console.log('Si tous les tests √©chouent avec 403:');
    console.log('1. V√©rifiez les permissions dans le dashboard Twitter');
    console.log('2. Changez vers "Read and write and Direct message"');
    console.log('3. R√©g√©n√©rez vos tokens');
    console.log('4. Mettez √† jour votre .env');
    console.log('\nSi seuls certains tests √©chouent:');
    console.log('1. Les permissions de base sont OK');
    console.log('2. Certaines fonctions n√©cessitent des permissions √©tendues');
}

// Ex√©cuter le test
if (require.main === module) {
    testBearerPermissions().catch(console.error);
}

module.exports = { testBearerPermissions };
